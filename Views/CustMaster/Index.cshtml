@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<MyProject.Models.CustMaster>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Index", "CustMaster", FormMethod.Get))
{
    <table class="table">
        <tr>
            <td align="left">&nbsp;</td>
            <td>&nbsp;</td>
            <td align="center">
                @Html.DropDownList("SearchField", (IEnumerable<SelectListItem>)ViewData["SearchFields"], new {style = "width:150px;height:33px"})
                @Html.DropDownList("SearchCondition", (IEnumerable<SelectListItem>)ViewData["SearchConditions"], new { style = "width:150px;height:33px" })
                @Html.TextBox("SearchText", ViewData["SearchText"] as String, new { style = "width:100px;height:33px" })
                <input type="submit" value="Search" name="command" class="btn btn-default" />
                <input type="submit" value="Clear" name="command" class="btn btn-default" /> 
            </td>
            <td>&nbsp;</td>
            <td align="right">&nbsp;</td>
        </tr>
        <tr>
            <td align="left">
                @Html.DropDownList("Export", (IEnumerable<SelectListItem>)ViewData["Exports"], new { style = "width:65px;height:33px" })
                <input type="submit" value="Export" name="command" class="btn btn-default" />
            </td>
            <td>&nbsp;</td>
            <td align="center">                
                <input type="submit" value="Add New Record" name="command" class="btn btn-default" />
            </td>
            <td>&nbsp;</td>
            <td align="right">
                &nbsp;
                @Html.DropDownList("PageSize", (IEnumerable<SelectListItem>)ViewData["PageSizes"], new { style = "width:70px;height:33px" })
                <!--<input type="submit" value="Page Size" name="command" class="btn btn-default" /> -->
            </td>
        </tr>
    </table>
}

<table class="table">
    <tr>
        <th class="hide">
            @Html.ActionLink("Cust Id", "Index", new { sortOrder = ViewData["CustIdSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Customer", "Index", new { sortOrder = ViewData["CustNameSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Acronym", "Index", new { sortOrder = ViewData["AcronymSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Branches", "Index", new { sortOrder = ViewData["NoofBranchesSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Levels of Authority", "Index", new { sortOrder = ViewData["LevelofAuthoritySortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Code", "Index", new { sortOrder = ViewData["CodeSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Ticker", "Index", new { sortOrder = ViewData["TickerSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Demo", "Index", new { sortOrder = ViewData["InDemoSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Tiered Pricing", "Index", new { sortOrder = ViewData["TieredPricingSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th>
            @Html.ActionLink("Active", "Index", new { sortOrder = ViewData["isActiveSortParm"], SearchText = ViewData["SearchText"] })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td class="hide">
            @Html.DisplayFor(modelItem => item.CustId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Acronym)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NoofBranches)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LevelofAuthority)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Code)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ticker)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InDemo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TieredPricing)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.isActive)
        </td>
        <td>
            @*@Html.ActionLink("Edit", "Edit", new {
 						CustId = item.CustId 
 						})*@
            <a href="@Url.Action("Edit", "CustMaster", new {CustId=item.CustId })">
                <span class='glyphicon glyphicon-pencil'></span>
            </a> |
            @*@Html.ActionLink("Details", "Details", new {
 						CustId = item.CustId 
 						})*@ 
            <a href="@Url.Action("Details", "CustMaster", new {CustId=item.CustId })">
                <span class='glyphicon glyphicon-list-alt'></span>
            </a>|
            @*@Html.ActionLink("Delete", "Delete", new {
 						CustId = item.CustId 
 						})*@
            <a href="@Url.Action("Delete", "CustMaster", new {CustId=item.CustId })">
                <span class='glyphicon glyphicon-trash'></span>
            </a>
        </td>
    </tr>
}

</table>

<table class="table">
    <tr>
        <td align="center">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewData["CurrentSort"], SearchText = ViewData["SearchText"] }))
        </td>
    </tr>
</table>

 @section Scripts {

    // alert("in javascript");
          $("#pageTitle").html("Customer Master");
         $("#PageSize").change(function () {
         var pagesz = $("#PageSize :selected").val();
         var oldpath = window.location.pathname;
          //alert("Index position" +oldpath.search("Index"));

          if (oldpath.search("Index") >=0) {
                window.location = "Index?PageSize=" + pagesz + "&command=Page Size";         
     
          }
          else {
              window.location = "CustMaster/Index?PageSize=" + pagesz + "&command=Page Size";
          }



     });
     
}
   


